- 예외 처리
어떤 일을 시도하다가 문제가 생기면 다른 쪽에 집어던지고 받은 쪽은 수습

try
{
    throw 예외 객체
}
catch(throw가 던진 것)
{
    예외 처리
}
try에서 예외 상황을 발견하면 그 때의 원인을 throw가 던지고 catch가 받는 식

구조화된 예외 처리
함수 호출로 변경된 것들을 한 번에 되돌림
(함수 호출로 인해 증가한 스택을 본래 형태로 되돌림)

ex)
try
{
    if (...)
        throw ...;
}
catch(int nExp)
{
    ...;
}
에러가 날 수 있는 상황에 if문을 주고 throw를 통해서 catch 블록으로 던짐
throw 를 통해서 catch 블록으로 던질 때 던진 값을 catch문의 매개 변수로 받음

C : malloc() 함수 -> 성공 or 실패를 if 문으로 확인해야함
C++ : new 연산자 -> 구조화된 예외처리 덕분에 실패가 존재하지 X