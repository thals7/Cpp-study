- 순수 가상 클래스
순수 가상 함수를 멤버로 가진 클래스
순수 가상 함수 : 선언은 미리 하고 정의는 미래에 하도록 미루는 함수

virtual 반환형식 메서드이름() const = 0;

순수 가상 클래스는 인스턴스를 직접 선언할 수 없음
따라서 파생 클래스는 반드시 기본 클래스에 선언된 순수 가상 함수를 재정의해야함

- 상속과 형변환
형변환 연산자
1. const_cast<> : 상수형 포인터에서 const 제거 (필요시 사용)
2. static_cast<> : 컴파일 타임에 상/하향 형변환
상속 관계일 때 파생 형식을 기본 형식으로 포인팅(상향 형변환)
문법적으로 적절한 상/하향 형변환이 아니라면 컴파일 오류가 발생
3. dynamic_cast<> : 런타임에 상/하향 형변환 (절대로 사용X)
4. reinterpret_cast<> : C언어의 typecasting(형변환)과 유사 (사용X)

- 상속과 연산자 다중 정의
파생 클래스에서 생성자 함수를를 정의할 필요 없이 using 키워드를 선언함으로써 해결 가능 + 단순 대입 연산자
ex)
class CMyDataEx : public CMyData
{
public:
    ...
    using CMyData::CMyData;
    using CMyData::operator+;
};

- 다중 상속
두 개 이상의 클래스를 하나가 동시에 상속받는 것
class 파생 클래스 : public 기본 클래스, 기본 클래스, ... {};

다중 상속은 쓰지 않는 것이 좋음
인터페이스 다중 상속만이 유일하게 사용 가능